/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'com.gradleup.shadow' version '8.3.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}



dependencies {
    testImplementation libs.junit.jupiter
    testImplementation(platform("io.cucumber:cucumber-bom:7.19.0"))
    testImplementation("io.cucumber:cucumber-java")
    testImplementation("io.cucumber:cucumber-junit-platform-engine")
    testImplementation 'org.hamcrest:hamcrest:3.0'
    testImplementation 'org.assertj:assertj-swing:3.17.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'edu.wofford.App'
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.wofford.app.App'
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
        xml {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                        '**/edu/wofford/Main*',
                        '**/edu/wofford/ConsoleMain*',
                        '**/edu/wofford/GuiMain*']
                    )
        }))
    }
}

javadoc {
    options.with {
        links 'https://docs.oracle.com/javase/17/docs/api/'
    }
    exclude 'edu/wofford/Main*'
    exclude 'edu/wofford/ConsoleMain*'
    exclude 'edu/wofford/GuiMain*'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'html:build/reports/cucumber/report.html', '--glue', 'gradle.cucumber', 'src/test/resources']
            jvmArgs = ["--add-opens=java.base/java.util=ALL-UNNAMED"]
        }
    }
    timeout = Duration.ofMinutes(3)
}


